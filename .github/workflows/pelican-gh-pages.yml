name: Deploy portfolio site to GitHub Pages with Pelican

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: GitHub Pelican Build Action
        # You may pin to the exact commit or the version.
        # uses: iranzo/gh-pages-pelican-action@c27d99dd96c4137b3e6894aaf32bf89bb022214a
        uses: iranzo/gh-pages-pelican-action@1.0.3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          # override the default `gh-pages` deployment branch
          GH_PAGES_BRANCH: gh-pages
          # override the default `content` folder for sources for website
          SOURCE_FOLDER: content
          # override the default `pelicanconf.py` file for pelican configuration
          PELICAN_CONFIG_FILE: pelicanconf.py
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
